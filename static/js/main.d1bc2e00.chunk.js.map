{"version":3,"sources":["assets/projectLogo.png","firebase.js","Components/LandingPage.js","Components/Description.js","Components/MusicPlayer.js","Components/LetterTopPart.js","App.js","serviceWorker.js","index.js","assets/audio/anger.mp3","assets/audio/empty.mp3","assets/audio/joy.mp3","assets/audio/sadness.mp3","assets/audio/tranquil.mp3"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","LandingPage","handleAbout","event","preventDefault","scroller","scrollTo","duration","delay","smooth","handleGo","handleLetters","className","src","require","alt","onClick","this","type","Component","Description","href","MusicPlayer","props","name","controls","anger","joy","sadness","tranquil","empty","getAudioTrack","LetterTopPart","handleCreditsClick","App","handleUserClick","userValue","target","value","setState","userChoice","handleGoBack","generateButtons","map","index","key","handleOptionSubmit","handleLetterChange","userLetter","handleNameChange","userName","handleLetterClick","state","alert","dbRef","database","ref","newInput","push","letters","on","response","newDataSet","data","val","emotionClass","animationIn","animationOut","animationInDuration","animationOutDuration","isVisible","animateOnce","animateIn","initiallyVisible","onSubmit","action","id","htmlFor","method","onChange","placeholder","maxLength","cols","rows","letter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d1bc2e00.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/projectLogo.81c40b7d.png\";","import firebase from 'firebase'; \r\nimport 'firebase/database'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyC9asBYezkoPAwspoxkPNmnSnGNdHNgHdM\",\r\n    authDomain: \"frameofmind-1ee0c.firebaseapp.com\",\r\n    databaseURL: \"https://frameofmind-1ee0c.firebaseio.com\",\r\n    projectId: \"frameofmind-1ee0c\",\r\n    storageBucket: \"frameofmind-1ee0c.appspot.com\",\r\n    messagingSenderId: \"748452614533\",\r\n    appId: \"1:748452614533:web:250090f8cc8114832c74ec\"\r\n};\r\n  // Initialize Firebase\r\n    firebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React, { Component } from 'react'; \r\nimport { animateScroll as scroll, scroller } from \"react-scroll\";\r\n\r\nclass LandingPage extends Component {\r\n    handleAbout = (event) => {\r\n        event.preventDefault(); \r\n        scroller.scrollTo('descriptionContainer', {\r\n            duration: 1500,\r\n            delay: 0,\r\n            smooth: 'easeInOutQuart'\r\n        })\r\n    }\r\n\r\n    handleGo = (event) => {\r\n        event.preventDefault(); \r\n        scroller.scrollTo('selectionMenu', {\r\n            duration: 2000,\r\n            delay: 0,\r\n            smooth: 'easeInOutQuart'\r\n        })\r\n    }\r\n\r\n    handleLetters = (event) => {\r\n        event.preventDefault(); \r\n        scroller.scrollTo('lettersContainer', {\r\n            duration: 2000,\r\n            delay: 0,\r\n            smooth: 'easeInOutQuart'\r\n        })\r\n    }\r\n    render() {\r\n        return(\r\n            <div className=\"wrapper\">\r\n                <div className=\"landingPageContainer\">\r\n                    <div className=\"landingPageMainText\">\r\n                        <p className=\"landingPageAestheticElement \">はじめまして!</p>\r\n                        <h2 className=\"landingPageHeading\">welcome to the</h2>\r\n                        <div className=\"logoContainer\">\r\n                            <img src={require('../assets/projectLogo.png')} alt=\"A logo for the application that says 'frame of mind'\"/>\r\n                        </div>\r\n                        <h1 className=\"landingPageDescription\"> <span className=\"fatText\">frame of MIND:</span> a place where you can let it all out.</h1>\r\n                    </div>\r\n    \r\n                    <div className=\"landingPageNavButtons\">\r\n                        <ul>\r\n                            <li>\r\n                                <button onClick={this.handleAbout} className=\"landingPageAbout\" type=\"button\">about</button>\r\n                            </li>\r\n                            <li>\r\n                                <button onClick={this.handleGo} className=\"landingPageGo\" type=\"button\">start</button>\r\n                            </li>\r\n                            <li>\r\n                                <button onClick={this.handleLetters} className=\"landingPageLetters\" type=\"button\">letters</button>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LandingPage;","import React, { Component } from 'react'; \r\n\r\nclass Description extends Component {\r\n    render() {\r\n        return(\r\n            <section className=\"descriptionContainer\">\r\n                <div className=\"wrapper\">\r\n                    <div className=\"topText\">\r\n                        <div className=\"sectionName\">\r\n                            <h2>how does it work?</h2>\r\n                        </div>\r\n                        <div className=\"descriptionText\">\r\n                            <p> <span className=\"fatText\">\"frame of mind\"</span> implies the mood that you are currently in.</p>\r\n                            <p className=\"fatText\">foM allows you to express it.</p>\r\n                        </div>\r\n                        <div className=\"socialLinks\">\r\n                            <p>you can find the stranger who made this here:</p>\r\n                            <ul>\r\n                                <li>\r\n                                    <a href=\"https://github.com/valkyrie-max\">github</a>\r\n                                    </li>\r\n                                <li>\r\n                                    <a href=\"https://twitter.com/alisacodes\">twitter</a>\r\n                                    </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mainText\">\r\n                        <h4 className=\"fatText\">frame of MIND is a place where you can get everything off your chest.</h4>\r\n                        <div className=\"fullDescription\">\r\n                            <p><span className=\"fatText\">choose</span>  an emotion from the list that fits your current mood.</p>\r\n                            <p>then you can <span className=\"fatText\">listen</span> to the offered melody <span className=\"crossedOut\">(or not)</span> while <span className=\"fatText\">writing</span> about you are feeling in this very moment.</p>\r\n                            <p>you can <span className=\"fatText\">share</span> your thoughts with others after you are done by posting them to the letters section. <span className=\"crossedOut\">or you can erase them.</span></p>\r\n                            <p><span className=\"fatText\">signing</span> your name with your name or a nickname is also an option. <span className=\"crossedOut\">but you don't have to.</span></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Description","import React, { Component } from 'react';\r\n\r\n// import audio pieces\r\nimport anger from '../assets/audio/anger.mp3'\r\nimport empty from '../assets/audio/empty.mp3'\r\nimport joy from '../assets/audio/joy.mp3'\r\nimport sadness from '../assets/audio/sadness.mp3'\r\nimport tranquil from '../assets/audio/tranquil.mp3'\r\n\r\n// based on the prop name, display the right track\r\nconst MusicPlayer = (props) => {\r\n    const getAudioTrack = () => {\r\n        switch (props.name) {\r\n            case `anger`: return <audio controls src={anger}></audio>;\r\n            case `joy`: return <audio controls src={joy}></audio>;\r\n            case `sadness`: return <audio controls src={sadness}></audio>;\r\n            case `tranquil`: return <audio controls src={tranquil}></audio>;\r\n            case `empty`: return <audio controls src={empty}></audio>;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"audioTrack\">\r\n            {getAudioTrack()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MusicPlayer;","import React, { Component } from 'react';\r\nimport { animateScroll as scroll, scroller } from \"react-scroll\";\r\n\r\nclass LetterTopPart extends Component {\r\n    handleCreditsClick = (event) => {\r\n        event.preventDefault();\r\n        scroller.scrollTo('credits', {\r\n            duration: 2000,\r\n            delay: 0,\r\n            smooth: 'easeInOutQuart'\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"lettersText\">\r\n                <h2>see what others left behind.</h2>\r\n                <div className=\"creditsReferral\">\r\n                    <p>\"who's music is that?\"</p>\r\n                    <p>\"what fonts did you use?\"</p>\r\n                    <p>you can find credits and info</p>\r\n                    <a onClick={this.handleCreditsClick} href=\"#credits\"><span className=\"fatText\">here</span></a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LetterTopPart;","import React, { Component } from 'react';\nimport {Animated} from \"react-animated-css\";\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport { animateScroll as scroll, scroller } from \"react-scroll\";\nimport firebase from './firebase';\n\n// import components\nimport LandingPage from './Components/LandingPage';\nimport Description from './Components/Description';\nimport MusicPlayer from './Components/MusicPlayer'\nimport LetterTopPart from './Components/LetterTopPart';\n\n// styling import\nimport './styles/style.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userChoice: '',\n      letters: [],\n      userLetter: '',\n      userName: ''\n    }\n  }\n\n  // handle an option click\n  handleUserClick = (event) => {\n    const userValue = event.target.value;\n    this.setState({\n      userChoice: userValue,\n    })\n    scroller.scrollTo('emotionContainer', {\n      duration: 1500,\n      delay: 0,\n      smooth: 'easeInOutQuart'\n    })\n  }\n\n  // handle a button click to take the user back to the select \n  handleGoBack = () => {\n    scroller.scrollTo('menuFormContainer', {\n      duration: 1500,\n      delay: 0,\n      smooth: 'easeInOutQuart'\n    })\n  }\n\n  // generating buttons by using map method to DRY the code\n  generateButtons = () => {\n    const buttonArray = [\n      `anger`,\n      `joy`,\n      `sadness`,\n      `tranquil`,\n      `empty`\n    ]\n\n    return buttonArray.map((value, index) => {\n      return <button key={index} onClick={this.handleUserClick} type=\"submit\" className={value} value={value}>{value}</button>\n    })\n  }\n\n  // handle option submit\n  handleOptionSubmit = (event) => {\n    event.preventDefault(); \n  }\n\n  //handle change in the textarea to store data from the user \n  handleLetterChange = (event) => {\n    this.setState({\n      userLetter: event.target.value\n    })\n  } \n\n  // handle change in the text input to store user's name\n  handleNameChange = (event) => {\n    this.setState({\n      userName: event.target.value\n    })\n  }\n\n  // handle onClick to submit the letter\n  handleLetterClick = (event) => {\n    event.preventDefault(); \n    if (this.state.userLetter !== '' && this.state.userChoice !== '') {\n      const dbRef = firebase.database().ref(); \n      const newInput = {\n        userLetter: this.state.userLetter,\n        userName: this.state.userName === '' ? 'anon' : this.state.userName\n      }\n      dbRef.push(newInput);\n      this.setState({\n        userLetter: '',\n        userName: ''\n      })\n      scroller.scrollTo('lettersContainer', {\n        duration: 2000,\n        delay: 0,\n        smooth: 'easeInOutQuart'\n    })\n    } else if (this.state.userChoice == '' && this.state.userLetter !== '') {\n      return alert(`select an emotion please. if you are unsure, just go with empty.`)\n    } else {\n      return alert(`i'm sorry but you'll have to type at least a couple of words. i hope it will make you feel better.`)\n    }\n  }\n\n  // handle on click to refer to credits \n  handleCreditsClick = (event) => {\n    scroller.scrollTo('footer', {\n      duration: 2000,\n      delay: 0,\n      smooth: 'easeInOutQuart'\n    })\n  }\n\n  // once there is something on the page, grab data from Fb\n  componentDidMount() {\n    const dbRef = firebase.database().ref();\n    dbRef.on(`value`, (response) =>{\n      const newDataSet = [];\n      const data = response.val(); \n      for (let key in data) {\n        newDataSet.push(data[key]);\n      }\n      this.setState({\n        letters: newDataSet\n      })\n    })\n  }\n  \n\n  render() {\n    // emotion classes\n    const emotionClass = `${this.state.userChoice}Main emotionContainer`\n    return (\n      <>\n        <header className=\"appHeader\">\n          <Animated animationIn=\"fadeInDown\" animationOut=\"fadeOutDown\" animationInDuration={1800} animationOutDuration={1800} isVisible={true}>\n              <LandingPage key=\"landingPage\" />\n          </Animated>\n        </header>\n        <main>\n          <ScrollAnimation animateOnce={true} animateIn=\"fadeInLeft\"  duration={2} initiallyVisible={false}>\n            <Description key=\"description\"/>\n          </ScrollAnimation>\n          <ScrollAnimation animateOnce={true} animateIn=\"fadeInRight\"  duration={2} initiallyVisible={false}>\n            <section  className=\"selectionMenu\">\n              <div className=\"wrapper\">\n                <form className=\"menuFormContainer\" onSubmit={this.handleOptionSubmit} action=\"\" id=\"userSelectionMenu\">\n                  <label className=\"optionLabel\" htmlFor=\"userSelectionMenu\">make a choice</label>\n                  <div className=\"buttons\">\n                    {this.generateButtons()}\n                  </div>\n                </form>\n              </div>\n            </section>\n          </ScrollAnimation>\n          <ScrollAnimation animateIn=\"fadeInLeft\" duration={2} initiallyVisible={false}>\n            <section className={emotionClass}>\n              <div className=\"wrapper\">\n                <label htmlFor=\"userEmotionInput\" className=\"emotionInputLabel\">you chose: {this.state.userChoice}</label>\n                <form className=\"emotionForm\" action=\"\" id=\"userEmotionInput\" name=\"userLetterForm\" method=\"\">\n                  {/* name input */}\n                  <label htmlFor=\"userNameInput\" className=\"nameHere\">leave your name here.</label>\n                  <input className=\"userNameBox\" value={this.state.userName} onChange={this.handleNameChange} placeholder=\"or don't.\" type=\"text\" name=\"userName\" id=\"userNameInput\"/>\n                  {/* textarea input */}\n                  <label htmlFor=\"userTextInput\" className=\"characterLimit\">maximum length: 500 characters.</label>\n                  <textarea value={this.state.userLetter} onChange={this.handleLetterChange} id=\"userTextInput\" placeholder=\"let it out.\" className=\"userLetterText\" maxLength=\"500\" cols=\"30\" rows =\"5\" name=\"userTextInput\"></textarea>\n                  {/* submit letter */}\n                  <button onClick={this.handleLetterClick} className=\"submitLetter\" type=\"submit\">share my letter</button>\n                  <MusicPlayer key=\"musicPlayer\" name={this.state.userChoice} />\n                  <button className=\"backToSelection\" type=\"button\" onClick={this.handleGoBack}>take me back up to selection</button>\n                </form>\n              </div>\n            </section>\n          </ScrollAnimation>\n          <ScrollAnimation animateIn=\"fadeInUp\" duration={2} initiallyVisible={false}>\n            <section className=\"lettersContainer\">\n            <div className=\"wrapper\">\n              <LetterTopPart />\n              <ul>\n                {\n                  this.state.letters.map((letter, index) => {\n                      return (\n                        <li key={index}>\n                        <h3>{letter.userName}</h3>\n                        <p>{letter.userLetter}</p>\n                        </li>\n                      )\n                  })\n                }\n              </ul>\n            </div>\n          </section>\n          </ScrollAnimation>\n        </main>\n        <footer>\n          <div className=\"wrapper\">\n          <ScrollAnimation animateIn=\"fadeInDown\" duration={2} initiallyVisible={false}>\n            <div className=\"credits\">\n              <h2>credits</h2>\n              <div className=\"creditsLinks\">\n                <ul>\n                  <li>checkout the project repo on <a href=\"https://github.com/valkyrie-max/frameOfMind\">github</a></li>\n                  <li>music by <a href=\"https://freemusicarchive.org/music/Unheard_Music_Concepts\">Unheard Music Concepts</a></li>\n                  <li>fonts used: <a className=\"raleway\" href=\"https://fonts.google.com/specimen/Raleway\">Raleway</a>, <a className=\"merriweather\" href=\"https://fonts.google.com/specimen/Merriweather\">Merriweather</a></li>\n                  <li>primary color palette can be found <a href=\"https://coolors.co/474350-b9cdda-ebeaea-979eb1\">here</a></li>\n                  <li>the stranger who made this can also be found on <a href=\"https://twitter.com/alisacodes\">twitter</a></li>\n                </ul>\n              </div>\n            </div>\n          </ScrollAnimation>\n          </div>\n        </footer>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/anger.f26a93e1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/empty.51cbc765.mp3\";","module.exports = __webpack_public_path__ + \"static/media/joy.efc9091e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sadness.a8e8e5f6.mp3\";","module.exports = __webpack_public_path__ + \"static/media/tranquil.a6d6edc4.mp3\";"],"sourceRoot":""}